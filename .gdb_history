n
n
n
n
n
n
n
p *curr
p *currNode
p *(currNode->prev)
p *(currNode->prev->entry)
p *fs->currEntry
p *fs->currEntry->entry
n
n
n
n
n
c
break ls
c
p *fs
p *(fs->currEntry->entry)
p *(fs->currEntry->prev->entry)
p *(fs->currEntry)
c
quit
break goToParent 
r fat32.img 
p *fs->currEntry->entry
p *fs->currEntry->prev->entry
quit
break cd
r fat32.img 
n
n
n
n
p *newDir->entry
p *newDir
quit
break cd
r fat32.img 
p *fs->currEntry->entry
n
n
n
n
p *newDir
n
s
n
n
n
n
n
n
n
p *currNode
p *currNode->entry
p *fs->currEntry->entry
n
n
p *fs->currEntry->entry
p *fs->currEntry->entry->prev
p *fs->currEntry->prev->entry
p *fs->currEntry
p *fs->currEntry->prev
n
lexer
break lexer
break goToParent
n
n
p *fs->currEntry->entry
n
c
p *fs->currEntry->entry
p *fs->currEntry->prev->entry
n
n
p *temp->entry
p *fs->currEntry-entry
p *fs->currEntry->entry
p *fs->currEntry->prev->entry
n
n
n
quit
break cd
r fat32.img 
c
p *fs->currEntry->entry
p *fs->currEntry
quit
break openFile
r fat32.img 
n
n
n
n
n
n
n
n
n
n
n
n
n  5
n 5
n
n
p *entries
n
p formattedName 
n
n
n
n
n
n
n
n
n
n
p fileCluster
p *fs->currEntry->entry
c
n 20
n 20
n 20
n
n
n
n
c
n
n
n
n 30
n
n
n
p fileCluster
p *fs->currEntry->entry
quit
break readFile 
r fat32.img 
n
n
n
p rootDirOffset 
p dataRegionOffset 
p clusterOffset 
p startCluster
p startCluster >> 16
p startCluster & 0xFFFF
fs->BPB_BytsPerSec
p *fs->BPB_BytsPerSec
p fs->BPB_BytsPerSec
p startCluster * fs->BPB_BytsPerSec
n
n
p clusterOffset
p rootDirOffset
p dataRegionOffset 
p clusterOffset && 0xFFFFFFFF
p clusterOffset & 0xFFFFFFFF
p (startCluster - 2) * fs->BPB_SecPerClus + (offset / fs->BPB_BytsPerSec) * fs->BPB_BytsPerSec
quit
break readFil
break readFile
r fat32.img 
n
n
n
n
n
p clusterOffset
n
p clusterOffset
n
n
c
n
n
n
n
n
p clusterOffset
n
p clusterOffset
c
quit
break readFile
r fat32.img 
n
n
n
n
n
n
p clusterOffset
p rooDirOffset
p rootDirOffset 
p rootDirOffset - 0xc
quit
r fat32.img 
sizeof(DirectoryEntry)
p sizeof(DirectoryEntry)
quit
break writeHandler
r fat32.img 
n
n
n
n
n
p *fs->currEntry->entry
p *fs->openFileList
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
n
fileEntry
p fileEntry
p fileEntry == NULL
p >inUse
p >inUse
p fileEntry->inUse
p fileEntry
p openFileList
p *fs->openFileList
p strcmp("a","a")
p (int)strcmp("a","a")
p (int)strcmp(fs->openFileList[0], formattedName)
p (int)strcmp(fs->openFileList[1], formattedName)
p (int)strcmp(fs->openFileList[0].filename, formattedName)
p (int)strcmp(fs->openFileList[1].filename, formattedName)
p (int)strcmp(fs->openFileList[2].filename, formattedName)
quit
